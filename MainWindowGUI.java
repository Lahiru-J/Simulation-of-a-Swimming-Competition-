/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swimmingcompetition;

import Model.SwimmingCompetition;
import Model.SwimmingEvent;
import Model.TrackPeople;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lahiru
 */
public class MainWindowGUI extends javax.swing.JFrame {

    /**
     * Creates new form MainWindowGUI
     */
    public MainWindowGUI() {
        initComponents();

        btnSwimmer.setSelected(true);        //initally set btnSwimmer selected
        rbtnMale.setSelected(true);          //initally set rbtbMale selected   
        setNamesToList();

        tblEventDetails.setRowHeight(25);
        btnStartEvent.setEnabled(false);
        displayEventDetails();

        changeRowColor();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupGender = new javax.swing.ButtonGroup();
        btnGroupPerson = new javax.swing.ButtonGroup();
        pnlAddPerson = new javax.swing.JPanel();
        btnSwimmer = new javax.swing.JToggleButton();
        btnSupportingMember = new javax.swing.JToggleButton();
        rbtnFemale = new javax.swing.JRadioButton();
        rbtnMale = new javax.swing.JRadioButton();
        btnJudge = new javax.swing.JToggleButton();
        pnlListPerson = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMaleSwimmer = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        listFemaleSwimmer = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        listJudge = new javax.swing.JList();
        jScrollPane10 = new javax.swing.JScrollPane();
        listSupportingMember = new javax.swing.JList();
        jScrollPane11 = new javax.swing.JScrollPane();
        listSpectator = new javax.swing.JList();
        btnRemoveMS = new javax.swing.JButton();
        btnRemoveFS = new javax.swing.JButton();
        btnRemoveJ = new javax.swing.JButton();
        btnRemoveSM = new javax.swing.JButton();
        btnRemoveS = new javax.swing.JButton();
        pnlEnterDetails = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnSpectator = new javax.swing.JToggleButton();
        pnlEventDetails = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblEventDetails = new javax.swing.JTable();
        btnNewEvent = new javax.swing.JButton();
        btnStartEvent = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlAddPerson.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnGroupPerson.add(btnSwimmer);
        btnSwimmer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSwimmer.setText("New Male Swimmer");
        btnSwimmer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSwimmerActionPerformed(evt);
            }
        });

        btnGroupPerson.add(btnSupportingMember);
        btnSupportingMember.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSupportingMember.setText("New Supporting Member");
        btnSupportingMember.setActionCommand("New Supporting Member");
        btnSupportingMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupportingMemberActionPerformed(evt);
            }
        });

        btnGroupGender.add(rbtnFemale);
        rbtnFemale.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rbtnFemale.setText("Female");
        rbtnFemale.setActionCommand("New Female Swimmer");
        rbtnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFemaleActionPerformed(evt);
            }
        });

        btnGroupGender.add(rbtnMale);
        rbtnMale.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rbtnMale.setText("Male");
        rbtnMale.setActionCommand("New Male Swimmer");
        rbtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMaleActionPerformed(evt);
            }
        });

        btnGroupPerson.add(btnJudge);
        btnJudge.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnJudge.setText("New Judge");
        btnJudge.setActionCommand("New Judge");
        btnJudge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJudgeActionPerformed(evt);
            }
        });

        pnlListPerson.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        listMaleSwimmer.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Male Swimmers", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Lucida Grande", 0, 15), java.awt.Color.darkGray)); // NOI18N
        listMaleSwimmer.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jScrollPane2.setViewportView(listMaleSwimmer);

        listFemaleSwimmer.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Female Swimmers", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Lucida Grande", 0, 15), java.awt.Color.darkGray)); // NOI18N
        listFemaleSwimmer.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jScrollPane3.setViewportView(listFemaleSwimmer);

        listJudge.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Judges", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Lucida Grande", 0, 15), java.awt.Color.darkGray)); // NOI18N
        listJudge.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jScrollPane4.setViewportView(listJudge);

        listSupportingMember.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Supporting Members", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Lucida Grande", 0, 15), java.awt.Color.darkGray)); // NOI18N
        listSupportingMember.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jScrollPane10.setViewportView(listSupportingMember);

        listSpectator.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Spectators", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Lucida Grande", 0, 15), java.awt.Color.darkGray)); // NOI18N
        listSpectator.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jScrollPane11.setViewportView(listSpectator);

        btnRemoveMS.setText("Remove");
        btnRemoveMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveMSActionPerformed(evt);
            }
        });

        btnRemoveFS.setText("Remove");
        btnRemoveFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFSActionPerformed(evt);
            }
        });

        btnRemoveJ.setText("Remove");
        btnRemoveJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveJActionPerformed(evt);
            }
        });

        btnRemoveSM.setText("Remove");
        btnRemoveSM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSMActionPerformed(evt);
            }
        });

        btnRemoveS.setText("Remove");
        btnRemoveS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlListPersonLayout = new javax.swing.GroupLayout(pnlListPerson);
        pnlListPerson.setLayout(pnlListPersonLayout);
        pnlListPersonLayout.setHorizontalGroup(
            pnlListPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListPersonLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(pnlListPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(btnRemoveMS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlListPersonLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnRemoveFS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListPersonLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnRemoveJ, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListPersonLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnRemoveSM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlListPersonLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnRemoveS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        pnlListPersonLayout.setVerticalGroup(
            pnlListPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListPersonLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlListPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                    .addComponent(jScrollPane10)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveMS)
                    .addComponent(btnRemoveFS)
                    .addComponent(btnRemoveJ)
                    .addComponent(btnRemoveSM)
                    .addComponent(btnRemoveS))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pnlEnterDetails.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblName.setForeground(new java.awt.Color(153, 153, 153));
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("Name");
        pnlEnterDetails.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 40));

        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });
        pnlEnterDetails.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 40));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlEnterDetails.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 120, 30));

        btnGroupPerson.add(btnSpectator);
        btnSpectator.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSpectator.setText("New Spectator");
        btnSpectator.setActionCommand("New Spectator");
        btnSpectator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpectatorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddPersonLayout = new javax.swing.GroupLayout(pnlAddPerson);
        pnlAddPerson.setLayout(pnlAddPersonLayout);
        pnlAddPersonLayout.setHorizontalGroup(
            pnlAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddPersonLayout.createSequentialGroup()
                .addGroup(pnlAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddPersonLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnlAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAddPersonLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(rbtnMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnJudge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSwimmer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddPersonLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSpectator, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSupportingMember, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlEnterDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addComponent(pnlListPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        pnlAddPersonLayout.setVerticalGroup(
            pnlAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddPersonLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddPersonLayout.createSequentialGroup()
                        .addGroup(pnlAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnMale, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbtnFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(btnSwimmer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(btnJudge, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(btnSupportingMember, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(btnSpectator, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(pnlEnterDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlListPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlEventDetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblEventDetails.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        tblEventDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event", "Swimmers", "Judges", "Supporting Members", "Spectators", "Winner"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Short.class, java.lang.Short.class, java.lang.Short.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEventDetails.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tblEventDetails.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblEventDetails.getTableHeader().setReorderingAllowed(false);
        tblEventDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEventDetailsMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblEventDetails);
        if (tblEventDetails.getColumnModel().getColumnCount() > 0) {
            tblEventDetails.getColumnModel().getColumn(0).setResizable(false);
            tblEventDetails.getColumnModel().getColumn(0).setPreferredWidth(200);
            tblEventDetails.getColumnModel().getColumn(1).setResizable(false);
            tblEventDetails.getColumnModel().getColumn(1).setPreferredWidth(15);
            tblEventDetails.getColumnModel().getColumn(2).setResizable(false);
            tblEventDetails.getColumnModel().getColumn(2).setPreferredWidth(15);
            tblEventDetails.getColumnModel().getColumn(3).setResizable(false);
            tblEventDetails.getColumnModel().getColumn(3).setPreferredWidth(35);
            tblEventDetails.getColumnModel().getColumn(4).setResizable(false);
            tblEventDetails.getColumnModel().getColumn(4).setPreferredWidth(15);
            tblEventDetails.getColumnModel().getColumn(5).setResizable(false);
            tblEventDetails.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        btnNewEvent.setText("Add New Event");
        btnNewEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEventActionPerformed(evt);
            }
        });

        btnStartEvent.setText("Start The Event");
        btnStartEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartEventActionPerformed(evt);
            }
        });

        jButton1.setText("Number Of People");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Remove Event");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Remove All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEventDetailsLayout = new javax.swing.GroupLayout(pnlEventDetails);
        pnlEventDetails.setLayout(pnlEventDetailsLayout);
        pnlEventDetailsLayout.setHorizontalGroup(
            pnlEventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEventDetailsLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlEventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEventDetailsLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(25, Short.MAX_VALUE))
                    .addGroup(pnlEventDetailsLayout.createSequentialGroup()
                        .addComponent(btnNewEvent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStartEvent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(44, 44, 44))))
        );
        pnlEventDetailsLayout.setVerticalGroup(
            pnlEventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEventDetailsLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlEventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewEvent)
                    .addComponent(btnStartEvent)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlAddPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlEventDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(pnlAddPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(pnlEventDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSwimmerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwimmerActionPerformed
        lblName.setText("Swimmer");
        rbtnMale.setSelected(true);         //to avoid not selecting a gender
    }//GEN-LAST:event_btnSwimmerActionPerformed

    private void btnSupportingMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupportingMemberActionPerformed
        lblName.setText("Supporting Member");
        txtName.grabFocus();
    }//GEN-LAST:event_btnSupportingMemberActionPerformed

    private void btnSpectatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpectatorActionPerformed
        lblName.setText("Spectaor");
        txtName.grabFocus();
    }//GEN-LAST:event_btnSpectatorActionPerformed

    private void rbtnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFemaleActionPerformed
        txtName.grabFocus();
        btnSwimmer.setText("New Female Swimmer");
    }//GEN-LAST:event_rbtnFemaleActionPerformed

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        if (!Character.isLetter(evt.getKeyChar())) {
            evt.consume();                           //allow only to type letters
        }
    }//GEN-LAST:event_txtNameKeyTyped

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            saveData();
        } else {
            lblName.setText("");
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        if (txtName.getText().isEmpty()) {
            lblName.setText("Name");
        }
    }//GEN-LAST:event_txtNameKeyReleased

    private void rbtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMaleActionPerformed
        txtName.grabFocus();
        btnSwimmer.setText("New Male Swimmer");
    }//GEN-LAST:event_rbtnMaleActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        saveData();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnJudgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJudgeActionPerformed
        lblName.setText("Judge");
        txtName.grabFocus();
    }//GEN-LAST:event_btnJudgeActionPerformed

    private void tblEventDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEventDetailsMouseClicked
        if (tblEventDetails.getSelectedRow() != -1) {
            btnStartEvent.setEnabled(true);
        } else {
            btnStartEvent.setEnabled(false);
        }
    }//GEN-LAST:event_tblEventDetailsMouseClicked

    private void btnNewEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEventActionPerformed
        new NewEventJDialog(null, true).setVisible(true);
    }//GEN-LAST:event_btnNewEventActionPerformed

    private void btnStartEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartEventActionPerformed
        if (tblEventDetails.getSelectedRow() > -1) {

            DefaultTableModel dtm = (DefaultTableModel) tblEventDetails.getModel();
            String currentEvent = ((String) dtm.getValueAt(
                    tblEventDetails.getSelectedRow(), 0)).split(" ")[0];
            SwimmingCompetition.startTheEvent(currentEvent);
            tblEventDetails.getSelectionModel().clearSelection();               // to deselect the selected row

        }
    }//GEN-LAST:event_btnStartEventActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.println("Total number of people - "
                + TrackPeople.getListPeople().size());                          //output the total number of people
        JOptionPane.showMessageDialog(this,
                "Total number of people - " + TrackPeople.getListPeople().size(),
                "Number of people registerd", JOptionPane.DEFAULT_OPTION);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRemoveMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveMSActionPerformed
        removePerson(listMaleSwimmer, btnRemoveMS);
    }//GEN-LAST:event_btnRemoveMSActionPerformed

    private void btnRemoveFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFSActionPerformed
        removePerson(listFemaleSwimmer, btnRemoveFS);
    }//GEN-LAST:event_btnRemoveFSActionPerformed

    private void btnRemoveJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveJActionPerformed
        removePerson(listJudge, btnRemoveJ);
    }//GEN-LAST:event_btnRemoveJActionPerformed

    private void btnRemoveSMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSMActionPerformed
        removePerson(listSupportingMember, btnRemoveS);
    }//GEN-LAST:event_btnRemoveSMActionPerformed

    private void btnRemoveSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSActionPerformed
        removePerson(listSpectator, btnRemoveS);
    }//GEN-LAST:event_btnRemoveSActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (tblEventDetails.getSelectedRow() != -1) {
            String strEventName = ((String) ((DefaultTableModel) tblEventDetails.getModel()).getValueAt(
                    tblEventDetails.getSelectedRow(), 0)).split(" ")[0];

            SwimmingCompetition.removeEvent(
                    SwimmingCompetition.getEvent(strEventName));
            displayEventDetails();

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        SwimmingCompetition.removeAllEvents();
        displayEventDetails();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindowGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindowGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindowGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindowGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindowGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroupGender;
    private javax.swing.ButtonGroup btnGroupPerson;
    private javax.swing.JToggleButton btnJudge;
    private javax.swing.JButton btnNewEvent;
    private javax.swing.JButton btnRemoveFS;
    private javax.swing.JButton btnRemoveJ;
    private javax.swing.JButton btnRemoveMS;
    private javax.swing.JButton btnRemoveS;
    private javax.swing.JButton btnRemoveSM;
    private javax.swing.JButton btnSave;
    private javax.swing.JToggleButton btnSpectator;
    private javax.swing.JButton btnStartEvent;
    private javax.swing.JToggleButton btnSupportingMember;
    private javax.swing.JToggleButton btnSwimmer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblName;
    private javax.swing.JList listFemaleSwimmer;
    private javax.swing.JList listJudge;
    private javax.swing.JList listMaleSwimmer;
    private javax.swing.JList listSpectator;
    private javax.swing.JList listSupportingMember;
    private javax.swing.JPanel pnlAddPerson;
    private javax.swing.JPanel pnlEnterDetails;
    private javax.swing.JPanel pnlEventDetails;
    private javax.swing.JPanel pnlListPerson;
    private javax.swing.JRadioButton rbtnFemale;
    private javax.swing.JRadioButton rbtnMale;
    private static javax.swing.JTable tblEventDetails;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    /* Save the names to specific Arrays */
    private void saveData() {

        if (btnSwimmer.isSelected()) {
            SwimmingCompetition.addPeopleToTheCompetition(
                    btnGroupGender.getSelection().getActionCommand(),
                    txtName.getText());
        } else {
            SwimmingCompetition.addPeopleToTheCompetition(
                    btnGroupPerson.getSelection().getActionCommand(),
                    txtName.getText());
        }
        setNamesToList();
        txtName.setText("");

        txtName.setText("");
        lblName.setText("Name");
        txtName.grabFocus();
    }

    /* send names to specific JLists */
    private void setNamesToList() {

        // Adding names to the JLists 
        listMaleSwimmer.setListData(
                TrackPeople.getNamesMaleSwimmers().toArray());
        listFemaleSwimmer.setListData(
                TrackPeople.getNamesFemaleSwimmers().toArray());
        listJudge.setListData(TrackPeople.getNamesJudges().toArray());
        listSpectator.setListData(TrackPeople.getNamesSpectators().toArray());
        listSupportingMember.setListData(
                TrackPeople.getNamesSupportingMembers().toArray());
        // End of adding names

    }

    public static void displayEventDetails() {

        DefaultTableModel dtm = (DefaultTableModel) tblEventDetails.getModel();
        dtm.setRowCount(0);                                                     // remove all rows (to avoid repetition)
        ArrayList<SwimmingEvent> events = SwimmingCompetition.getSwimmingEvents();

        for (SwimmingEvent evnt : events) {

            ArrayList<Object> row = new ArrayList<>();
            row.add(evnt.getEventName() + " " + evnt.getSwimmingStyle()
                    + " " + evnt.getGender());
            row.add(evnt.getSwimmersInEvent().size());
            row.add(evnt.getJudgesInEvent().size());
            row.add(evnt.getSptMmbrsInEvent().size());
            row.add(evnt.getSpectatorsInEvent().size());
            if (evnt.getWinner() != null) {
                row.add(evnt.getWinner().getName());

            } else {
                row.add("-");
            }

            dtm.addRow(row.toArray());
        }

    }

    private void removePerson(JList list, JButton btn) {

        if (list.getSelectedIndex() != -1) {
            TrackPeople.removePerson((String) list.getSelectedValue());
            setNamesToList();
        } else {
            getToolkit().beep();
        }
    }

    public static void setWinner(String winner, SwimmingEvent sEvent) {
        String strEvent = sEvent.getEventName();
        DefaultTableModel dtm = (DefaultTableModel) tblEventDetails.getModel();
        for (int i = 0; i < dtm.getRowCount(); i++) {
            if (((String) dtm.getValueAt(i, 0)).split(" ")[0].equals(strEvent)) {
                dtm.setValueAt(sEvent.getWinner().getName(), i, 5);
                break;
            }
        }
    }

    /**
     * This method will change the color of the rows of the tblEventDetails
     */
    private void changeRowColor() {
        tblEventDetails.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable table,
                    Object value, boolean isSelected, boolean hasFocus,
                    int row, int column) {

                super.getTableCellRendererComponent(table, value,
                        isSelected, hasFocus, row, column);

                String winner = (String) table.getModel().getValueAt(row, 5);

                if (!("-".equals(winner))) {
                    setBackground(new Color(150, 232, 24));
                    setForeground(Color.BLACK);

                } else {
                    setBackground(new Color(242, 99, 65));
                    setForeground(Color.WHITE);
                }
                return this;
            }

        });
    }
}
