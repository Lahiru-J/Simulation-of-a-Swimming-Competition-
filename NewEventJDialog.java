/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swimmingcompetition;

import Model.MaleSwimmer;
import Model.SwimmingCompetition;
import Model.SwimmingEvent;
import Model.TrackPeople;
import Model.FemaleSwimmer;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;

/**
 *
 * @author Lahiru
 */
public class NewEventJDialog extends javax.swing.JDialog {

    private final DefaultListModel<String> dlmAllSwimmers;
    private final DefaultListModel<String> dlmSelectedSwimmers;
    private final DefaultListModel<String> dlmAllJudges;
    private final DefaultListModel<String> dlmSelectedJudges;
    private final DefaultListModel<String> dlmAllSptMmbrs;
    private final DefaultListModel<String> dlmSelectedSptMmbrs;
    private final DefaultListModel<String> dlmAllSpectators;
    private final DefaultListModel<String> dlmSelectedSpectators;

    private SwimmingEvent swimmingEvent;
    private boolean isAdded = false;                                            // to check whether an event is created

    /**
     * Creates new form NewEventJDialog
     *
     * @param parent
     * @param modal
     */
    public NewEventJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();

        dlmAllSwimmers = new DefaultListModel<>();
        dlmSelectedSwimmers = new DefaultListModel<>();
        dlmAllJudges = new DefaultListModel<>();
        dlmSelectedJudges = new DefaultListModel<>();
        dlmAllSptMmbrs = new DefaultListModel<>();
        dlmSelectedSptMmbrs = new DefaultListModel<>();
        dlmAllSpectators = new DefaultListModel<>();
        dlmSelectedSpectators = new DefaultListModel<>();

        displayPeople();

        tabPeople.setVisible(false);
//        listAllSwimmers.setVisible(false);                                      // not allowing to select swimmers when tab is disabled
        btnSendSwimmers.setEnabled(false);
        btnGetBackSwimmers.setEnabled(false);
        btnSendJudges.setEnabled(false);
        btnGetBackJudges.setEnabled(false);
        btnSendSptMmbrs.setEnabled(false);
        btnGetBackSptMmbrs.setEnabled(false);
        btnSendSpectators.setEnabled(false);
        btnGetBackSpectators.setEnabled(false);

        closeWindow();                                                             // close the jDialog depending on the conditions

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpGender = new javax.swing.ButtonGroup();
        tabPeople = new javax.swing.JTabbedPane();
        panelSwimmers = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAllSwimmers = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        listSelectedSwimmers = new javax.swing.JList();
        btnSendSwimmers = new javax.swing.JButton();
        btnGetBackSwimmers = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listAllJudges = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        listSelectedJudges = new javax.swing.JList();
        btnSendJudges = new javax.swing.JButton();
        btnGetBackJudges = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        listAllSptMmbrs = new javax.swing.JList();
        btnGetBackSptMmbrs = new javax.swing.JButton();
        btnSendSptMmbrs = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        listSelectedSptMmbrs = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        listAllSpectators = new javax.swing.JList();
        jScrollPane8 = new javax.swing.JScrollPane();
        listSelectedSpectators = new javax.swing.JList();
        btnSendSpectators = new javax.swing.JButton();
        btnGetBackSpectators = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbSwimmingStyle = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        rbtnMale = new javax.swing.JRadioButton();
        rbtnFemale = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtEventName = new javax.swing.JTextField();
        btnCreateEvent = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        tabPeople.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N

        listAllSwimmers.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listAllSwimmers.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listAllSwimmers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAllSwimmersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listAllSwimmers);

        listSelectedSwimmers.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listSelectedSwimmers.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listSelectedSwimmers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listSelectedSwimmersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listSelectedSwimmers);

        btnSendSwimmers.setText(">>");
        btnSendSwimmers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendSwimmersActionPerformed(evt);
            }
        });

        btnGetBackSwimmers.setText("<<");
        btnGetBackSwimmers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetBackSwimmersActionPerformed(evt);
            }
        });

        jLabel3.setText("Maximum of 5 swimmers are allowed in a single event");

        javax.swing.GroupLayout panelSwimmersLayout = new javax.swing.GroupLayout(panelSwimmers);
        panelSwimmers.setLayout(panelSwimmersLayout);
        panelSwimmersLayout.setHorizontalGroup(
            panelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSwimmersLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(panelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGetBackSwimmers, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSendSwimmers, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSwimmersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(111, 111, 111))
        );
        panelSwimmersLayout.setVerticalGroup(
            panelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSwimmersLayout.createSequentialGroup()
                .addGroup(panelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSwimmersLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btnSendSwimmers)
                        .addGap(40, 40, 40)
                        .addComponent(btnGetBackSwimmers))
                    .addGroup(panelSwimmersLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(panelSwimmersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        tabPeople.addTab("Swimmers", panelSwimmers);

        listAllJudges.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listAllJudges.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAllJudgesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listAllJudges);

        listSelectedJudges.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listSelectedJudges.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listSelectedJudgesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(listSelectedJudges);

        btnSendJudges.setText(">>");
        btnSendJudges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendJudgesActionPerformed(evt);
            }
        });

        btnGetBackJudges.setText("<<");
        btnGetBackJudges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetBackJudgesActionPerformed(evt);
            }
        });

        jLabel4.setText("Minimum of one judge and maximum of three judges");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSendJudges, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetBackJudges, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btnSendJudges)
                        .addGap(40, 40, 40)
                        .addComponent(btnGetBackJudges)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        tabPeople.addTab("Judges", jPanel2);

        listAllSptMmbrs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAllSptMmbrsMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(listAllSptMmbrs);

        btnGetBackSptMmbrs.setText("<<");
        btnGetBackSptMmbrs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetBackSptMmbrsActionPerformed(evt);
            }
        });

        btnSendSptMmbrs.setText(">>");
        btnSendSptMmbrs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendSptMmbrsActionPerformed(evt);
            }
        });

        listSelectedSptMmbrs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listSelectedSptMmbrsMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(listSelectedSptMmbrs);

        jLabel6.setText("Minum of two members and maximum of three memebers");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSendSptMmbrs, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetBackSptMmbrs, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btnSendSptMmbrs)
                        .addGap(40, 40, 40)
                        .addComponent(btnGetBackSptMmbrs))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        tabPeople.addTab("Supporting Staff Members", jPanel5);

        listAllSpectators.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAllSpectatorsMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(listAllSpectators);

        listSelectedSpectators.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listSelectedSpectatorsMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(listSelectedSpectators);

        btnSendSpectators.setText(">>");
        btnSendSpectators.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendSpectatorsActionPerformed(evt);
            }
        });

        btnGetBackSpectators.setText("<<");
        btnGetBackSpectators.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetBackSpectatorsActionPerformed(evt);
            }
        });

        jLabel7.setText("Minimum of five spectators ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSendSpectators, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetBackSpectators, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(208, 208, 208))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btnSendSpectators)
                        .addGap(40, 40, 40)
                        .addComponent(btnGetBackSpectators)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        tabPeople.addTab("Spectators", jPanel4);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel1.setText("Swimming Style");

        cmbSwimmingStyle.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        cmbSwimmingStyle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Freestyle", "Backstroke", "Butterfly Stroke", "Breaststroke", "" }));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel2.setText("Gender");

        btnGrpGender.add(rbtnMale);
        rbtnMale.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        rbtnMale.setText("Male");
        rbtnMale.setActionCommand("Male");
        rbtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMaleActionPerformed(evt);
            }
        });

        btnGrpGender.add(rbtnFemale);
        rbtnFemale.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        rbtnFemale.setText("Female");
        rbtnFemale.setActionCommand("Female");
        rbtnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFemaleActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel5.setText("Event Name*");

        txtEventName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        btnCreateEvent.setText("Create Event");
        btnCreateEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateEventActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(rbtnMale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnFemale))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbSwimmingStyle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(btnCreateEvent)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbSwimmingStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(rbtnMale)
                    .addComponent(rbtnFemale))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreateEvent)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(tabPeople, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(tabPeople, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rbtnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFemaleActionPerformed
        dlmAllSwimmers.removeAllElements();                                       //to avoid adding names over and over again
        dlmSelectedSwimmers.removeAllElements();

        for (FemaleSwimmer femaleSwimmer : TrackPeople.getListFemaleSwimmers()) {
            dlmAllSwimmers.addElement(femaleSwimmer.getName());
        }
        listAllSwimmers.setModel(dlmAllSwimmers);
    }//GEN-LAST:event_rbtnFemaleActionPerformed

    private void rbtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMaleActionPerformed
        dlmAllSwimmers.removeAllElements();                                       //to avoid adding names over and over again
        dlmSelectedSwimmers.removeAllElements();

        for (MaleSwimmer maleSwimmer : TrackPeople.getListMaleSwimmers()) {
            dlmAllSwimmers.addElement(maleSwimmer.getName());
        }
        listAllSwimmers.setModel(dlmAllSwimmers);
    }//GEN-LAST:event_rbtnMaleActionPerformed

    private void btnCreateEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateEventActionPerformed
        if (!txtEventName.getText().isEmpty() && btnGrpGender.getSelection() != null) {

            isAdded = SwimmingCompetition.addNewSwimmingEvent(
                    txtEventName.getText().trim(), // eliminate leading and trailing white spaces
                    cmbSwimmingStyle.getSelectedItem().toString(),
                    btnGrpGender.getSelection().getActionCommand());            // creating a new event

            if (isAdded) {
                tabPeople.setVisible(true);
//                listAllSwimmers.setEnabled(true);
                txtEventName.setEditable(false);
                cmbSwimmingStyle.setEnabled(false);
                rbtnMale.setEnabled(false);
                rbtnFemale.setEnabled(false);
                swimmingEvent = SwimmingCompetition.getEvent( // assigning the Swimming event to the var swimmingEvent
                        txtEventName.getText());
                btnCreateEvent.setEnabled(false);

            } else {
                txtEventName.setText("");
                txtEventName.grabFocus();
            }

        } else if (txtEventName.getText().isEmpty()) {
            txtEventName.grabFocus();
        } else {
            rbtnMale.grabFocus();
        }


    }//GEN-LAST:event_btnCreateEventActionPerformed

    private void btnGetBackSpectatorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetBackSpectatorsActionPerformed
        sendPeopleToTheList(listSelectedSpectators, listAllSpectators,
                dlmSelectedSpectators, dlmAllSpectators, btnGetBackSpectators);
    }//GEN-LAST:event_btnGetBackSpectatorsActionPerformed

    private void btnSendSpectatorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendSpectatorsActionPerformed
        sendPeopleToTheList(listAllSpectators, listSelectedSpectators,
                dlmAllSpectators, dlmSelectedSpectators, btnSendSpectators);
    }//GEN-LAST:event_btnSendSpectatorsActionPerformed

    private void listSelectedSpectatorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listSelectedSpectatorsMouseClicked
        if (listSelectedSpectators.getSelectedIndex() != -1) {
            btnGetBackSpectators.setEnabled(true);
        }
    }//GEN-LAST:event_listSelectedSpectatorsMouseClicked

    private void listAllSpectatorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAllSpectatorsMouseClicked
        if (listAllSpectators.getSelectedIndex() != -1) {
            btnSendSpectators.setEnabled(true);
        }
    }//GEN-LAST:event_listAllSpectatorsMouseClicked

    private void listSelectedSptMmbrsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listSelectedSptMmbrsMouseClicked
        if (listSelectedSptMmbrs.getSelectedIndex() != -1) {
            btnGetBackSptMmbrs.setEnabled(true);
        }
    }//GEN-LAST:event_listSelectedSptMmbrsMouseClicked

    private void btnSendSptMmbrsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendSptMmbrsActionPerformed
        sendPeopleToTheList(listAllSptMmbrs, listSelectedSptMmbrs,
                dlmAllSptMmbrs, dlmSelectedSptMmbrs, btnSendSptMmbrs);
    }//GEN-LAST:event_btnSendSptMmbrsActionPerformed

    private void btnGetBackSptMmbrsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetBackSptMmbrsActionPerformed
        sendPeopleToTheList(listSelectedSptMmbrs, listAllSptMmbrs,
                dlmSelectedSptMmbrs, dlmAllSptMmbrs, btnGetBackSptMmbrs);
    }//GEN-LAST:event_btnGetBackSptMmbrsActionPerformed

    private void listAllSptMmbrsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAllSptMmbrsMouseClicked
        if (listAllSptMmbrs.getSelectedIndex() != -1) {
            btnSendSptMmbrs.setEnabled(true);
        }
    }//GEN-LAST:event_listAllSptMmbrsMouseClicked

    private void btnGetBackJudgesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetBackJudgesActionPerformed
        sendPeopleToTheList(listSelectedJudges, listAllJudges,
                dlmSelectedJudges, dlmAllJudges, btnGetBackJudges);
    }//GEN-LAST:event_btnGetBackJudgesActionPerformed

    private void btnSendJudgesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendJudgesActionPerformed
        sendPeopleToTheList(listAllJudges, listSelectedJudges,
                dlmAllJudges, dlmSelectedJudges, btnSendJudges);
    }//GEN-LAST:event_btnSendJudgesActionPerformed

    private void listSelectedJudgesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listSelectedJudgesMouseClicked
        if (listSelectedJudges.getSelectedIndex() != -1) {
            btnGetBackJudges.setEnabled(true);
        }
    }//GEN-LAST:event_listSelectedJudgesMouseClicked

    private void listAllJudgesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAllJudgesMouseClicked
        if (listAllJudges.getSelectedIndex() != -1) {
            btnSendJudges.setEnabled(true);
        }
    }//GEN-LAST:event_listAllJudgesMouseClicked

    private void btnGetBackSwimmersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetBackSwimmersActionPerformed
        sendPeopleToTheList(listSelectedSwimmers, listAllSwimmers,
                dlmSelectedSwimmers, dlmAllSwimmers, btnGetBackSwimmers);
    }//GEN-LAST:event_btnGetBackSwimmersActionPerformed

    private void btnSendSwimmersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendSwimmersActionPerformed
        sendPeopleToTheList(listAllSwimmers, listSelectedSwimmers,
                dlmAllSwimmers, dlmSelectedSwimmers, btnSendSwimmers);
    }//GEN-LAST:event_btnSendSwimmersActionPerformed

    private void listSelectedSwimmersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listSelectedSwimmersMouseClicked
        if (listSelectedSwimmers.getSelectedIndex() != -1) {
            btnGetBackSwimmers.setEnabled(true);
        }
    }//GEN-LAST:event_listSelectedSwimmersMouseClicked

    private void listAllSwimmersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAllSwimmersMouseClicked
        if (listAllSwimmers.getSelectedIndex() != -1) {
            btnSendSwimmers.setEnabled(true);
        }
    }//GEN-LAST:event_listAllSwimmersMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewEventJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewEventJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewEventJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewEventJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewEventJDialog dialog = new NewEventJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateEvent;
    private javax.swing.JButton btnGetBackJudges;
    private javax.swing.JButton btnGetBackSpectators;
    private javax.swing.JButton btnGetBackSptMmbrs;
    private javax.swing.JButton btnGetBackSwimmers;
    private javax.swing.ButtonGroup btnGrpGender;
    private javax.swing.JButton btnSendJudges;
    private javax.swing.JButton btnSendSpectators;
    private javax.swing.JButton btnSendSptMmbrs;
    private javax.swing.JButton btnSendSwimmers;
    private javax.swing.JComboBox cmbSwimmingStyle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JList listAllJudges;
    private javax.swing.JList listAllSpectators;
    private javax.swing.JList listAllSptMmbrs;
    private javax.swing.JList listAllSwimmers;
    private javax.swing.JList listSelectedJudges;
    private javax.swing.JList listSelectedSpectators;
    private javax.swing.JList listSelectedSptMmbrs;
    private javax.swing.JList listSelectedSwimmers;
    private javax.swing.JPanel panelSwimmers;
    private javax.swing.JRadioButton rbtnFemale;
    private javax.swing.JRadioButton rbtnMale;
    private javax.swing.JTabbedPane tabPeople;
    private javax.swing.JTextField txtEventName;
    // End of variables declaration//GEN-END:variables

    private void sendPeopleToTheList(JList listStart, JList listEnd,
            DefaultListModel<String> dlmStart, DefaultListModel<String> dlmEnd,
            JButton btn) {

        for (Object person : listStart.getSelectedValuesList()) {
            dlmEnd.addElement((String) person);
            dlmStart.removeElement(person);
        }
        listEnd.setModel(dlmEnd);
        listStart.setModel(dlmStart);

        btn.setEnabled(false);
    }

    private void displayPeople() {
        for (String sptMmbr : TrackPeople.getNamesSupportingMembers()) {
            dlmAllSptMmbrs.addElement(sptMmbr);
        }
        listAllSptMmbrs.setModel(dlmAllSptMmbrs);

        for (String judge : TrackPeople.getNamesJudges()) {
            dlmAllJudges.addElement(judge);
        }
        listAllJudges.setModel(dlmAllJudges);

        for (String spectator : TrackPeople.getNamesSpectators()) {
            dlmAllSpectators.addElement(spectator);
        }
        listAllSpectators.setModel(dlmAllSpectators);
    }

    private void closeWindow() {
        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                if (isAdded) {
                    swimmingEvent.addSwimmersToEvent( // adding swimmers to the event
                            dlmSelectedSwimmers.toArray());
                    swimmingEvent.addJudgesToEvent( // adding judges to the event
                            dlmSelectedJudges.toArray());
                    swimmingEvent.addSupportingMembersToEvent( // adding supporting staff memebers to the event
                            dlmSelectedSptMmbrs.toArray());
                    swimmingEvent.addSpectatorsToEvent( // adding spectators to the event
                            dlmSelectedSpectators.toArray());

                    int i = swimmingEvent.isSet();                              // to determine whther the people are added
                    if (i == 0) {                                               // are all the necessary people added?
                        SwimmingCompetition.removeEvent(swimmingEvent);         // if the user want to quit, delete the object

                        dispose();                                              // exit from the window

                    } else if (i == -1) {

                        MainWindowGUI.displayEventDetails();                    // send event details to the table in CreateCompetitionJDialog class
                        SwimmingCompetition.serializeEvents();                  // save the swimming event list to file
                        dispose();
                    }

                } else {
                    dispose();                                                  // exit from the window
                }
            }

        });
    }

}

/*this is the previous code. One button for everything other than seperate buttons for each and every one
 // ask this question from ma'am 
 // we are having the functions to check whether a JList has values or is it empty
 // so in here is it okay to do that algorithm though they asked us not to write any algorithm in gui
 // since what I've done is checking the size of the data set and allowing or not to add rather than that it would be 
 // easy to deal with getting the size of the list so again my question is it fine? it can be easily wirtten in 
 // btnSendSwimmers button's action performed event 

         
 event.addSwimmersToEvent(dlmSelectedSwimmers.toArray());
 event.addJudgesToEvent(dlmSelectedJudges.toArray());
 event.addSupportingMembersToEvent(dlmSelectedSptMmbrs.toArray());
 event.addSpectatorsToEvent(dlmSelectedSpectators.toArray());

 next idea is to do everything from a single button .. creating name AND adding people to that. (question raised.. what if
 i wanted to modify swimmers ? then that would be hard.
 */
